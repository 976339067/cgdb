# This unit is intended to ensure that signal handling is working properly.
# At best, it is not. This is just a sanity check.
# Signal handling needs to be implemented in a more generic way and safe way.

# Load the tgdb library
load_lib tgdb.exp 	

# Don't wait for more than 10 seconds
set timeout 10 	

# Some basic constants
set tgdb_dir "tgdb.base"
set source_file_name "basic"
set file "$tgdb_dir/$source_file_name"
set source_file "$source_file_name.c"

delete_breakpoints

# Load the program to test into gdb
set test "load file"
if [gdb_file_cmd ${file}] then {
	exit 1
}

# testing the ^c signal
set test "priming for signal"
send "abc"

expect {
	-re "abc" { }
	timeout {
		fail "timeout $test"
	}
}

send "\3"

expect {
	-re "Quit.*$tgdb_prompt" { pass "control_c passed" } 

	timeout {
		fail "timeout $test"
	}
}

send "\3"

expect {
	-re "Quit.*$tgdb_prompt" { pass "control_c passed" }

	timeout {
		fail "timeout $test"
	}
}

send "b main"

expect {
	-re "b main" { }
	timeout {
		fail "timeout $test"
	}
}

send "\3"

expect {
	-re "Quit.*$tgdb_prompt" { pass "control_c passed"}

	timeout {
		fail "timeout $test"
	}
}


# Set a breakpoint at main and run
#set function "main"
#if [gdb_breakpoint ${function}] then {
#	exit 1
#}
#
## Run the program
#set test "run"
#send "r\n"
#expect {
#	-re "Starting program.*$source_file_name.*$tgdb_prompt" { pass "$test" }
#
#	-re ".*No executable file specified.*$tgdb_prompt" { fail "$test" }
#	timeout {
#		fail "timeout $test"
#	}
#}
