03/02/2003 Bob Rossi <bob_rossi@cox.net>

   * readline buffer commands working
   * Made readline not install any signal handler's

02/27/2003 Bob Rossi <bob_rossi@cox.net>

   * Fix parse bug, looking for 'Located in': when tgdb switch to starting
   gdb from a tty to a regular pipe, gdb now sometimes outputs the command
   that was typed, and sometimes it doesn't ( depending on version ).
   So, instead of counting lines, tgdb looks for 'Located in' after a 
   the 'info source' command.
   * Fix bug with 'info sources': tgdb_get_sources was not returning 
   all of the source files because of an allocation bug.

02/26/2003 Bob Rossi <bob_rossi@cox.net>

    * Added extra parameter to tgdb_start: A new fd is returned from 
    tgdb_start, it signals the user when data the user is typing is 
    ready to be returned.
    * Added function tgdb_send_input: The gui should send to this function
    every char the user has typed ( from readline ).
    * Added function tgdb_recv_input: The gui calls this function when the
    new descriptor is active ( from select ) and gets back data to write 
    to the terminal.
    * Updated gdbmi branch to compile with new interface
    * Implemented new interface in annotate-two-src
    * Getting driver to compile with new interface and moving to lib

02/24/2003 Bob Rossi <bob_rossi@cox.net>

    * Fixing buffer support for line at a time input: Trying to get support
    for buffered commands to work with line at a time interface.
    * Removed legacy globals functions: Removed functions that were looking
    at what char's have been typed and making decisions from that.
    * Modified buffer package to take commands instead of char's: The buffer
    package now takes only full commands at a time.
    * Fixing gdbmi interface to work with new libtgdb interface.
    * Fixing tgdb_util to use ~/.tgdb/gdb_init as the startup file
    * Moved config file info into lib/ instead of annotate-two-src: I figured
    both annotate and gdbmi would need to know this information.

02/23/2003 Bob Rossi <bob_rossi@cox.net>

    * Changed the Makefile's back to not using libtool: The new version of 
    automake support making static libraries from files in multiple dirs.
    * Major re-write, tgdb takes a command at a time now: libtgdb 
    now takes a command at a time. Instead of a char.
    * Removing states from data that checked for char's the user typed:
    This is because libtgdb now only accepts full commands.

02/19/2003 Bob Rossi <bob_rossi@cox.net>

    * Changed commands.c to dynamically allocate memory from 'info sources':
    When the user wants a list of sources, libtgdb should now be able to
    handle as many source files as the program is made up of. There used to be
    a MAXLINE limit to the number of char's that 'info sources' could output.

02/16/2003 Bob Rossi <bob_rossi@cox.net>

    * Reorganized libtgdb completly. Only 1 library is created now

02/12/2003 Bob Rossi <bob_rossi@cox.net>

    * Reorganized tgdb to be able to interface with gdb in multiple ways:
    This means that annotate-two-src interfaces with older gdb's using 
    annotate level 2. gdb-mi-src interfaces with gdb's that support mi.
    * Removed macro support from tgdb: It should be done from the application
    level not the library level.

version 0.2.3 (01/30/2003):

version 0.2.2 (01/23/2003):

01/22/2003  Bob Rossi  <bob_rossi@cox.net>

    * Changed tgdb, not halting when doing multiple line tab completion: 
    Fix tgdb when interfacing with readline, if readline returns a '\r' then 
    tgdb puts the prompt back otherwise, if readline issues a '\n' by doing 
    tab completion that spans multiple lines then tgdb does not put the prompt
    back. Also, once any implicit '\n' is recieved then libtgdb will be 
    ready to accept annotations.

version 0.2.1 (01/19/2003):

01/18/2003  Bob Rossi  <bob_rossi@cox.net>

    * Changed control char input: Telling libtgdb which control 
    chars the user can type that make it ok to start looking for an 
    annotation even though the user did not type '\n'.
    * Changed interface of the io unit: Changed interface of 
    I/O package. I initially made the functions return the char's they
    read and wrote and made '\0' be the error condition. However, it is
    of course possible to read the char '\0'. So, now the functions return
    an int with the error condition and take the char as a parameter.
    * Changed key input bug: If the user entered ^l, ^j, ^m ...,
    tgdb would not understand that the '\r' was from the annotation
    because the user never hit the '\n' key. This is now fixed by having
    the state_machine automatically say the user hit enter if readline
    returns a '\n' when the user is in USER_AT_PROMPT mode.

01/16/2003   Bob Rossi  <bob_rossi@cox.net>

    * Changed tgdb to not ignore \r's when a signal is caught: tgdb
    was ignoring carriage returns when a signal was caught while the
    user was interfacing with gdb. This would make it miss annotations.

version 0.2 (01/13/2003):

01/05/2003  Bob Rossi  <bob_rossi@cox.net>

    * Changed tgdb to allow the gui to pick the debugger: They user can
    specify which debugger they want to use. "gdb" is given by default.

12/28/2002  Bob Rossi  <bob_rossi@cox.net>

    * Changed tgdb and cgdb to have support for one macro: To test out
    the macro support I have added the ability to run one macro.
    * Fixed bug in tgdb in unfilled buffer in buffer.c: When a buffer
    was not filled and it was returned, it was not null terminated.

12/27/2002  Bob Rossi  <bob_rossi@cox.net>

    * Changed tgdb to return an error SOURCES_DENIED when tgdb_get_sources:
    When the client tries to get a list of sources. The error SOURCES_DENIED
    is returned to indicate that the debugger (gdb) gave an error. This 
    usually happens when the program was not compiled with debug.
    * Changed tgdb to return the filename that was denied when 
    ABSOLUTE_SOURCE_DENIED is returned: When the clients requests the absolute
    filename of a file through tgdb_get_source_absolute_filename and gdb says
    the file does not exist, then the client gets that notification along 
    with the name of the file. Previously they would just have gotten the
    notification.

12/23/2002  Bob Rossi  <bob_rossi@cox.net>

    * Changed tgdb to return errors through tgdb_err_msg: This function is
    now responsible for returning errors to the client. If a particular 
    function in libtgdb fails, then this function must be called to get
    the error. However, the other tgdb functions still need to be modified
    to return the new error code ( -1 ) to allow the client to know that
    tgdb_err_msg needs to be called.

12/22/2002  Bob Rossi  <bob_rossi@cox.net>

    * Changed tgdb to add tgdb_tty_name: This function gets the name of the
    pseudo Terminal that tgdb uses to communicate with the debugged program.

NO CHANGELOG NOTES HAVE BEEN ADDED BEFORE DATE ABOVE
