08/11/2003 Bob Rossi <bob@brasko.net>
	The basic purpose of this commit is to handle the control_c signal.

	* annotate.c: handle_error_begin, added call to set data state to VOID.
	* commands.c: commands_prepare_for_command, call global_list_finished.
	commands_issue_command, initialize global variable
	* tgdb.c: moving control_c from bottom of file to top.
	introduce new function tgdb_handle_signals.
	tgdb_recv, call to tgdb_handle_signals
	tgdb_run_command, removed signal handling code from function.

08/01/2003 Bob Rossi <bob@brasko.net>

	* a2-tgdb.c: remove global tgdb_partially_run_command.
	* tgdb.c: tgdb_partially_run_command, changed 'externed' global to static 
	global.
	tgdb_send_input, make sure tgdb_partially_run_command is set correctly.

08/01/2003 Bob Rossi <bob@brasko.net>
	
	* a2-tgdb.h: removed a2_command_typed_at_prompt interace function.
	added parameter ready_for_next_command to function a2_tgdb_init.
	* a2-tgdb.c: a2_tgdb_is_debugger_ready no longer depends on extern
	variable from the data unit.
    a2_tgdb_init, sets up function callback for when finishing a command.
	a2_command_typed_at_prompt, remove implementation.
	* annotate.c: extern's global command_completed_callback from data unit.
	handle_misc_prompt, calls callback function now to say that the subsystem 
	has finished a command.
	* commands.c: commands_prepare_for_command, no longer sets a externed
	varible COMMAND_ALREADY_GIVEN to 1.
	* data.c: remove global variables COMMAND_TYPED_AT_PROMPT and
	COMMAND_ALREADY_GIVEN. Instead, a callback to libtgdb is run when the
	subsystem finishes a command.
	* tgdb_interface.h: add typedef for callback function type.
	* tgdb.c: add 2 global variabls IS_SUBSYSTEMJ_READY_FOR_NEXT_COMMAND and
	HAS_USER_SENT_COMMAND. Added command_completion_callback. Modified the way
	libtgdb determines if a command can be sent to the lower subsystem or a char 
	can be sent to the readline context.

07/27/2003 Bob Rossi <bob@brasko.net>

	* a2-tgdb.h: Removed unused interface function. a2_is_ready.

07/22/2003 Bob Rossi <bob@brasko.net>

	* a2-tgdb.h: Updating interface for .4.0 ( comments only )

07/18/2003 Bob Rossi <bob@brasko.net>
	
	* a2-tgdb.h: Updating interface for .4.0 ( comments only )

version 0.3.3a (07/16/2003):

version 0.3.3 (07/15/2003):

07/15/2003 Bob Rossi <bob@brasko.net>

	* a2-tgdb.h: Updating interface for .4.0 ( comments only )

07/14/2003 Bob Rossi <bob@brasko.net>

	* tgdb.h: Updating interface for .4.0 ( comments only )

07/03/2003 Bob Rossi <bob@brasko.net>
	
	* tgdb.h: Updating interface for .4.0 ( comments only )

07/02/2003 Bob Rossi <bob@brasko.net>
	
	* tgdb.h: Prototyped interface for .4.0 ( comments only )

07/02/2003 Bob Rossi <bob@brasko.net>

	* tgdb.h: Adding commands tgdb_run_client_command
	tgdb_set_breakpoint_file_line. Remove tgdb_send command. It is now a
	static command internal to libtgdb. In place of it, all functions will be
	exported.
	* types.h: Added enum tgdb_command,enum tgdb_breakpoint_action
	* tgdb.c: Implent functions above.
	* gdbmi_tgdb.h: Add gdbmi_tgdb_return_client_command,
	gdbmi_tgdb_client_modify_breakpoint
	* gdbmi_tgdb.c: Implement above.
	* a2-tgdb.h: Add a2_tgdb_client_modify_breakpoint,
	a2_tgdb_return_client_command
	* a2-tgdb.c: Implemented above.

07/02/2003 Bob Rossi <bob@brasko.net>

	* Added testsuite directory: No more regression!

06/28/2003 Bob Rossi <bob@brasko.net>

	* TODO: Changed requirements for .4.0 and .5.0

06/27/2003 Bob Rossi <bob@brasko.net>

	* TODO: Changed requirements for .4.0

version 0.3.2 (06/25/2003):

06/12/2003 Bob Rossi <bob_rossi@cox.net>

	* types.h: Removed comment

06/04/2003 Bob Rossi <bob_rossi@cox.net>

    * changed interface for tgdb: It now returns atomic commands.
    These commands are self contained. The gui can now act on one
    command from tgdb instead of waiting for several.

06/01/2003 Bob Rossi <bob_rossi@cox.net>

    * tgdb.c: tgdb_initialize now uses fs_util in a more usefull way.
    calling fs_util_create_dir_in_base instead of fs_util_create_dir.

06/01/2003 Bob Rossi <bob_rossi@cox.net>
    
    * First big step at generalizing the protocol used to communicate
      with gdb and the main loop used to send commands to it.
      This is a first step at getting multiple types of communication
      to work with gdb ( annotate 2, gdbmi, possibly even annotate 1).
      However, since the changes are overwhelming, I will not comment
      on them.

04/30/2003 Bob Rossi <bob_rossi@cox.net>

    * Removed terminal.h & terminal.c: They now live in the libutil

04/27/2003 Bob Rossi <bob_rossi@cox.net>

    * Reorganized the cvs tree

04/13/2003 Bob Rossi <bob_rossi@cox.net>

    * Removed data_get_prompt() function.

version 0.3.0 (04/11/2003):

04/09/2003 Bob Rossi <bob_rossi@cox.net>

    * Adding support for reading/writing of command history
    * if tgdb_start fails, the driver cleans up before dying.
    * Set data state to USER_COMMAND before running TAB_COMPLETION
    * Fixed reverse-search-histroy bug where readline would not 
    run command searched for.

04/08/2003 Bob Rossi <bob_rossi@cox.net>

    * Adding Tab completion
    * Allowing feature to force redisplay of readline
    * Adding Change of prompt support

04/03/2003 Bob Rossi <bob_rossi@cox.net>

    * Made tgdb return CURRENT_FILE_UPDATE: This tells the gui the 
    absolute and relative path to the current file. It also tells it 
    the line number. This is enough info for the gui to understand the
    breakpoint files without a large overhead.

04/02/2003 Bob Rossi <bob_rossi@cox.net>

    * Changed tgdb to parse annotations in a new way: tgdb now accepts 
    annotations from gdb in this form '\r+\n\032\032annotation\r+\n'
    This also removes all '\r' from the output that commands parses.
    * Fixed commands.c where it was removing a \r that no longer exists.

04/02/2003 Bob Rossi <bob_rossi@cox.net>

    * Changed rlctx_prog rl_callback_read_char to respect EOF
    * Changed rlctx_prog to respect the exception set in select loop:
    In cygwin, EOF is detected in the exception set. So this needs to 
    be read.

04/01/2003 Bob Rossi <bob_rossi@cox.net>

    * Automatically building getch_driver and input_driver: This is done
    because 'make' seems to be failing to build the programs correctly
    when they are extra's. Its probably a configure problem that needs to
    be solved.
    * tgdb now works on windows XP in cygwin: Fixed creation of home directory.

03/29/2003 Bob Rossi <bob_rossi@cox.net>

    * Fixed all of tgdb's to work with autoconf: All of the files that make up
    tgdb now test to see if a header is available before it is included.

03/28/2003 Bob Rossi <bob_rossi@cox.net>

   * Reversed decision to change BUFFER_USER_COMMAND -> BUFFER_GUI_COMMAND:
   All commands were being outputted back to the user.

03/27/2003 Bob Rossi <bob_rossi@cox.net>

    * Stop adding the enter command to readline's history.
    * A better solution for the misc_prompt commands are under way: This
    allows the user to enter a command during a misc prompt. Tgdb also
    traverses all of the buffered commands, running all commands that the user
    typed and skipping internal commands ( tgdb and gui ).

03/26/2003 Bob Rossi <bob_rossi@cox.net>

    * tgdb now supports the commands feature of gdb: This was broken at
    some point but is now implemented to work correctly. It is treated like a 
    regular prompt.

03/23/2003 Bob Rossi <bob_rossi@cox.net>

    * tgdb now fully supports readline: tgdb now can support commands by using
    readline. It is transparent to the front end.

03/11/2003 Bob Rossi <bob_rossi@cox.net>

    * tgdb now allows a user to enter a command at a misc prompt:
    This fixes the problem where tgdb does not know that it is ok for the 
    user to enter a command at the misc prompt.

03/06/2003 Bob Rossi <bob_rossi@cox.net>

    * Changed the command interface to be a queue

03/04/2003 Bob Rossi <bob_rossi@cox.net>
   
    * Perfected the queue unit :)
    * Moved all of the command running into commands: This makes one nice entry
    point to running a command.
    * Wrote an infinate string unit: This replaced all the constant size
    buffers

03/03/2003 Bob Rossi <bob_rossi@cox.net>

    * Added a queue unit to the project: It will contain all of the commands
    ready to go to gdb.

03/02/2003 Bob Rossi <bob_rossi@cox.net>

    * readline buffer commands working
    * Made readline not install any signal handler's

02/27/2003 Bob Rossi <bob_rossi@cox.net>

    * Fix parse bug, looking for 'Located in': when tgdb switch to starting
    gdb from a tty to a regular pipe, gdb now sometimes outputs the command
    that was typed, and sometimes it doesn't ( depending on version ).
    So, instead of counting lines, tgdb looks for 'Located in' after a 
    the 'info source' command.
    * Fix bug with 'info sources': tgdb_get_sources was not returning 
    all of the source files because of an allocation bug.

02/26/2003 Bob Rossi <bob_rossi@cox.net>

    * Added extra parameter to tgdb_start: A new fd is returned from 
    tgdb_start, it signals the user when data the user is typing is 
    ready to be returned.
    * Added function tgdb_send_input: The gui should send to this function
    every char the user has typed ( from readline ).
    * Added function tgdb_recv_input: The gui calls this function when the
    new descriptor is active ( from select ) and gets back data to write 
    to the terminal.
    * Updated gdbmi branch to compile with new interface
    * Implemented new interface in annotate-two-src
    * Getting driver to compile with new interface and moving to lib

02/24/2003 Bob Rossi <bob_rossi@cox.net>

    * Fixing buffer support for line at a time input: Trying to get support
    for buffered commands to work with line at a time interface.
    * Removed legacy globals functions: Removed functions that were looking
    at what char's have been typed and making decisions from that.
    * Modified buffer package to take commands instead of char's: The buffer
    package now takes only full commands at a time.
    * Fixing gdbmi interface to work with new libtgdb interface.
    * Fixing tgdb_util to use ~/.tgdb/gdb_init as the startup file
    * Moved config file info into lib/ instead of annotate-two-src: I figured
    both annotate and gdbmi would need to know this information.

02/23/2003 Bob Rossi <bob_rossi@cox.net>

    * Changed the Makefile's back to not using libtool: The new version of 
    automake support making static libraries from files in multiple dirs.
    * Major re-write, tgdb takes a command at a time now: libtgdb 
    now takes a command at a time. Instead of a char.
    * Removing states from data that checked for char's the user typed:
    This is because libtgdb now only accepts full commands.

02/19/2003 Bob Rossi <bob_rossi@cox.net>

    * Changed commands.c to dynamically allocate memory from 'info sources':
    When the user wants a list of sources, libtgdb should now be able to
    handle as many source files as the program is made up of. There used to be
    a MAXLINE limit to the number of char's that 'info sources' could output.

02/16/2003 Bob Rossi <bob_rossi@cox.net>

    * Reorganized libtgdb completly. Only 1 library is created now

02/12/2003 Bob Rossi <bob_rossi@cox.net>

    * Reorganized tgdb to be able to interface with gdb in multiple ways:
    This means that annotate-two-src interfaces with older gdb's using 
    annotate level 2. gdb-mi-src interfaces with gdb's that support mi.
    * Removed macro support from tgdb: It should be done from the application
    level not the library level.

version 0.2.3 (01/30/2003):

version 0.2.2 (01/23/2003):

01/22/2003  Bob Rossi  <bob_rossi@cox.net>

    * Changed tgdb, not halting when doing multiple line tab completion: 
    Fix tgdb when interfacing with readline, if readline returns a '\r' then 
    tgdb puts the prompt back otherwise, if readline issues a '\n' by doing 
    tab completion that spans multiple lines then tgdb does not put the prompt
    back. Also, once any implicit '\n' is recieved then libtgdb will be 
    ready to accept annotations.

version 0.2.1 (01/19/2003):

01/18/2003  Bob Rossi  <bob_rossi@cox.net>

    * Changed control char input: Telling libtgdb which control 
    chars the user can type that make it ok to start looking for an 
    annotation even though the user did not type '\n'.
    * Changed interface of the io unit: Changed interface of 
    I/O package. I initially made the functions return the char's they
    read and wrote and made '\0' be the error condition. However, it is
    of course possible to read the char '\0'. So, now the functions return
    an int with the error condition and take the char as a parameter.
    * Changed key input bug: If the user entered ^l, ^j, ^m ...,
    tgdb would not understand that the '\r' was from the annotation
    because the user never hit the '\n' key. This is now fixed by having
    the state_machine automatically say the user hit enter if readline
    returns a '\n' when the user is in USER_AT_PROMPT mode.

01/16/2003   Bob Rossi  <bob_rossi@cox.net>

    * Changed tgdb to not ignore \r's when a signal is caught: tgdb
    was ignoring carriage returns when a signal was caught while the
    user was interfacing with gdb. This would make it miss annotations.

version 0.2 (01/13/2003):

01/05/2003  Bob Rossi  <bob_rossi@cox.net>

    * Changed tgdb to allow the gui to pick the debugger: They user can
    specify which debugger they want to use. "gdb" is given by default.

12/28/2002  Bob Rossi  <bob_rossi@cox.net>

    * Changed tgdb and cgdb to have support for one macro: To test out
    the macro support I have added the ability to run one macro.
    * Fixed bug in tgdb in unfilled buffer in buffer.c: When a buffer
    was not filled and it was returned, it was not null terminated.

12/27/2002  Bob Rossi  <bob_rossi@cox.net>

    * Changed tgdb to return an error SOURCES_DENIED when tgdb_get_sources:
    When the client tries to get a list of sources. The error SOURCES_DENIED
    is returned to indicate that the debugger (gdb) gave an error. This 
    usually happens when the program was not compiled with debug.
    * Changed tgdb to return the filename that was denied when 
    ABSOLUTE_SOURCE_DENIED is returned: When the clients requests the absolute
    filename of a file through tgdb_get_source_absolute_filename and gdb says
    the file does not exist, then the client gets that notification along 
    with the name of the file. Previously they would just have gotten the
    notification.

12/23/2002  Bob Rossi  <bob_rossi@cox.net>

    * Changed tgdb to return errors through tgdb_err_msg: This function is
    now responsible for returning errors to the client. If a particular 
    function in libtgdb fails, then this function must be called to get
    the error. However, the other tgdb functions still need to be modified
    to return the new error code ( -1 ) to allow the client to know that
    tgdb_err_msg needs to be called.

12/22/2002  Bob Rossi  <bob_rossi@cox.net>

    * Changed tgdb to add tgdb_tty_name: This function gets the name of the
    pseudo Terminal that tgdb uses to communicate with the debugged program.

NO CHANGELOG NOTES HAVE BEEN ADDED BEFORE DATE ABOVE
